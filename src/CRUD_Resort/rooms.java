
package CRUD_Resort;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.util.Locale;
/**
 *
 * @author Oscar Caceres y Henry Fiallos
 */
public class rooms extends javax.swing.JFrame {
    conexion conn = new conexion();
    Connection cn=conn.Conectar();
   // private String ahora;
    
    
    /**
     * Creates new form rooms
     */
    public rooms() {
        initComponents();
        this.setResizable(false);
        setLocationRelativeTo(null);
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btn_libre = new javax.swing.JButton();
        btn_regresar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btn_buscar = new javax.swing.JButton();
        txt_buscar = new javax.swing.JTextField();
        lbl_status = new javax.swing.JLabel();
        lbl_observa = new javax.swing.JLabel();
        lbl_precio = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lbl_hoy = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbl_checkIN = new javax.swing.JLabel();
        lbl_huesped = new javax.swing.JLabel();
        lbl_tipo = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        btn_factura = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        btn_servicio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGO INVERSONES CAFIA.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 390, -1, 210));

        btn_libre.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btn_libre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/libre.png"))); // NOI18N
        btn_libre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_libre.setMaximumSize(new java.awt.Dimension(100, 30));
        jPanel1.add(btn_libre, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 810, 80, 100));

        btn_regresar.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        btn_regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/regresar.png"))); // NOI18N
        btn_regresar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_regresar.setMaximumSize(new java.awt.Dimension(100, 30));
        btn_regresar.setPreferredSize(new java.awt.Dimension(95, 29));
        btn_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 810, 80, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 1100, 10));

        btn_buscar.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, 40));

        txt_buscar.setFont(new java.awt.Font("Impact", 1, 24)); // NOI18N
        txt_buscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_buscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "No. Habitacion", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });
        jPanel2.add(txt_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 60));

        lbl_status.setFont(new java.awt.Font("OCR A Extended", 1, 36)); // NOI18N
        jPanel2.add(lbl_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 470, 40));

        lbl_observa.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jPanel2.add(lbl_observa, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 510, 30));

        lbl_precio.setFont(new java.awt.Font("OCR A Extended", 1, 36)); // NOI18N
        jPanel2.add(lbl_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 160, 240, 50));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1090, 10));

        lbl_hoy.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPanel2.add(lbl_hoy, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 220, 280, 40));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Dias:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 230, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Monto a Facturar:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Detalles:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel8.setFont(new java.awt.Font("OCR A Extended", 1, 18)); // NOI18N
        jLabel8.setText("Nombre del Huesped");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 230, 30));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Fecha de Entrada:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Fecha de Salida:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, -1));
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 1020, 10));

        jTable1.setFont(new java.awt.Font("OCR A Extended", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jPanel2.add(jTable1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 1020, 150));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Status:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Precio Lps.");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 180, -1, -1));

        jLabel13.setFont(new java.awt.Font("Viner Hand ITC", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 255));
        jLabel13.setText("Reservaciones en esta Habitacion");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 420, 40));

        jLabel17.setFont(new java.awt.Font("OCR A Extended", 1, 18)); // NOI18N
        jLabel17.setText("Fecha de Reserva");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, 330, 30));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel14.setText("Tipo /Ubicacion:");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        lbl_checkIN.setBackground(new java.awt.Color(255, 255, 255));
        lbl_checkIN.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jPanel2.add(lbl_checkIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 220, 40));

        lbl_huesped.setFont(new java.awt.Font("OCR A Extended", 1, 36)); // NOI18N
        lbl_huesped.setForeground(new java.awt.Color(255, 51, 51));
        jPanel2.add(lbl_huesped, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 870, 40));

        lbl_tipo.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jPanel2.add(lbl_tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 950, 30));

        jLabel15.setFont(new java.awt.Font("OCR A Extended", 1, 18)); // NOI18N
        jLabel15.setText("Fecha Salida (Check OUT)");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, 290, 30));
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 1090, 10));

        btn_factura.setBackground(new java.awt.Color(51, 255, 255));
        btn_factura.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        btn_factura.setText("FACTURAR");
        btn_factura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_facturaActionPerformed(evt);
            }
        });
        jPanel2.add(btn_factura, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 290, -1, 30));
        jPanel2.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 1020, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 1150, 600));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel2.setText("CONTROL DE HABITACIONES");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, -1, -1));

        btn_servicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpieza.png"))); // NOI18N
        btn_servicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_servicio.setMaximumSize(new java.awt.Dimension(100, 30));
        btn_servicio.setPreferredSize(new java.awt.Dimension(95, 29));
        jPanel1.add(btn_servicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 810, 80, 100));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PLANO DEL HOTEL.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 1450, 930));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1490, 1000));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresarActionPerformed
        // TODO add your handling code here:
        new principal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_regresarActionPerformed

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        String idcuarto = txt_buscar.getText();
        String idhuespedFromRoom = null; // Para almacenar idhuesped de la tabla habitacion
        String idreservaFromRoom = null; // Para almacenar idreserva de la tabla habitacion
        //String idhuesped = txt_buscar.getText();
        
        try{
            PreparedStatement ps = cn.prepareStatement("SELECT tipo,precio, ubicacion, observaciones, idhuesped, idreserva, status, check_in FROM habitacion WHERE idroom=?");
            ps.setString(1, idcuarto);
            ResultSet rs=ps.executeQuery();
            
          if (rs.next()) {
              LocalDateTime ahora = LocalDateTime.now();
              DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
                String tipo         = rs.getString("tipo");// Obtiene el valor de la columna 'tipo'
                String ubicacion    = rs.getString("ubicacion"); // Obtiene el valor de la columna 'ubicacion'
                String observacion  = rs.getString("observaciones"); // Obtiene el valor de 'observaciones'
                String status       = rs.getString("status"); // Obtiene el valor de 'status'
                String precioStr    = rs.getString("precio");
                //double precio       = rs.getDouble("precio"); // Obtiene el valor de 'precio' (asumiendo que es numérico)
                double precioNumerico = Double.parseDouble(precioStr);
                NumberFormat formatoMoneda = NumberFormat.getCurrencyInstance(new Locale("es", "HN"));
                String precioFormateado = formatoMoneda.format(precioNumerico);
                String checkIn      = rs.getString("check_in"); // Obtiene el valor de 'check_in'
             
             lbl_tipo.setText(rs.getString("tipo") + " / " + rs.getString("ubicacion"));
             lbl_observa.setText(rs.getString("observaciones"));
             lbl_status.setText(rs.getString("status"));
             lbl_precio.setText(rs.getString("precio"));
             lbl_precio.setText(precioFormateado);
             lbl_checkIN.setText(rs.getString("check_IN"));
             String fechaHoraFormateada;
             //lbl_hoy.setText(ahora);
             lbl_hoy.setText(fechaHoraFormateada = ahora.format(formato));
            //System.out.println(fechaHoraFormateada);
  
             
             idhuespedFromRoom = rs.getString("idhuesped");
             idreservaFromRoom = rs.getString("idreserva");
          }
          
          else {
                JOptionPane.showMessageDialog(this, "CUIDADO...SOLO HAY 24 CUARTOS!" + idcuarto);
                txt_buscar.setText(""); // Clear the field if no room is found
                 // Clear other fields as well
         }
          
            // Consulta para obtener detalles del huesped usando idhuespedFromRoom
            if (idhuespedFromRoom != null) {
                PreparedStatement psHuespedes = cn.prepareStatement("SELECT nombre, apellido FROM huespedes WHERE idhuesped=?");
                psHuespedes.setString(1, idhuespedFromRoom);
                ResultSet rsHuespedes = psHuespedes.executeQuery();

                if (rsHuespedes.next()) {
                    lbl_huesped.setText(rsHuespedes.getString("nombre") + " " + rsHuespedes.getString("apellido"));
                } else {
                    lbl_huesped.setText("No hay huesped asignado");
                }
            } else {
                lbl_huesped.setText("No hay huesped asignado");
            }

            // Consulta para obtener detalles de la reservacion usando idreservaFromRoom
            // Esta parte poblará la jTable1 con los detalles de la reserva para esta habitación
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Limpiar datos anteriores

            if (idreservaFromRoom != null) {
                PreparedStatement psReservacion = cn.prepareStatement(
                    "SELECT h.nombre, r.fecha_IN, r.fecha_OUT " +
                    "FROM reservacion r " +
                    "JOIN huespedes h ON r.idhuesped = h.idhuesped " +
                    "WHERE r.idreserva = ?"
                );
                psReservacion.setString(1, idreservaFromRoom);
                ResultSet rsReservacion = psReservacion.executeQuery();

                if (rsReservacion.next()) {
                    
                    String huespedName  = rsReservacion.getString("nombre");
                    String fechaIn      = rsReservacion.getString("fecha_IN");
                    String fechaOut     = rsReservacion.getString("fecha_OUT");
                    model.addRow(new Object[]{huespedName, fechaIn, fechaOut});
                 }
            } else {
                 // Si no hay reserva vinculada a la habitación, limpiar la tabla.
                 // La etiqueta "Reservaciones en esta Habitacion" seguirá ahí.
            } 
             
        } catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Avivate..!! " + ex.getMessage());
        }
        
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_facturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_facturaActionPerformed
        // TODO add your handling code here:
        new Factura().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_facturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rooms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_factura;
    private javax.swing.JButton btn_libre;
    private javax.swing.JButton btn_regresar;
    private javax.swing.JButton btn_servicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_checkIN;
    private javax.swing.JLabel lbl_hoy;
    private javax.swing.JLabel lbl_huesped;
    private javax.swing.JLabel lbl_observa;
    private javax.swing.JLabel lbl_precio;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_tipo;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
   

}
